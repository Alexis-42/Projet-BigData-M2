services:
  front:
    build:
      context: ./front
    ports:
      - "5000:5000"
    networks:
      - fastapi-network
    depends_on:
      - model

  model:
    build:
      context: ./model
    ports:
      - "8000:8000"
    depends_on:
      - elasticsearch
    networks:
      - elastic-network
      - fastapi-network

  pipeline-data-retrieval:
    build:
      context: ./pipeline/data_retrieval
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_BROKER_URL: kafka:29092
    env_file:
      - .env
    networks:
      - kafka-network
      

  pipeline-data-formatting:
    build:
      context: ./pipeline/data_formatting
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_BROKER_URL: kafka:29092
    networks:
      - kafka-network
      - fastapi-network

  zookeeper:
      image: confluentinc/cp-zookeeper:latest
      networks:
        - kafka-network
      environment:
        - ZOOKEEPER_CLIENT_PORT=2181
        - ZOOKEEPER_TICK_TIME=2000    
      ports:
        - "2181:2181"
      healthcheck:
        test: [ "CMD", "nc", "-z", "localhost", "2181" ]
        interval: 30s                      
        timeout: 10s        
        retries: 5  
  
  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - kafka-network
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "29092:29092"                    
    environment:
      - KAFKA_BROKER_ID=1               
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1    
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:29092", "--list" ]
      interval: 10s
      timeout: 10s
      retries: 3

  elasticsearch:
    image: elasticsearch:8.15.3
    ports:
      - 9200:9200
    environment:
      discovery.type: 'single-node'
      xpack.security.enabled: 'false'
      ELASTIC_PASSWORD: ${ELASTICSEARCH_PASSWORD}
    networks:
      - elastic-network
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      
  kibana:
    image: kibana:8.15.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - xpack.screenshotting.browser.chromium.disableSandbox='true'
    ports:
      - 5601:5601
    networks:
    - elastic-network
    volumes:
      - kibana-data:/usr/share/kibana/data
  
networks:
  elastic-network:
    driver: bridge
  kafka-network:
    driver: bridge
  fastapi-network:
    driver: bridge
  
volumes:
  elasticsearch-data:
    driver: local
  kibana-data:
    driver: local